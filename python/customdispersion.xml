<ForceField>
    <AtomTypes>
        <Type name="MBPol-O" class="O" element="O" mass="15.99943"/>
        <Type name="MBPol-H" class="H" element="H" mass="1.007947"/>
        <Type name="MBPol-M" class="M" mass="0"/>
        <Type name="MBPol-Cl" class="CL" element="CL" mass="35.453200"/>
    </AtomTypes>
    <Residues>
        <Residue name="HOH">
            <Atom name="O" type="MBPol-O" />
            <Atom name="H1" type="MBPol-H" />
            <Atom name="H2" type="MBPol-H" />
            <Atom name="M" type="MBPol-M" />
            <VirtualSite type="average3" index="3" atom1="0" atom2="1" atom3="2" weight1="0.573293118" weight2="0.213353441" weight3="0.213353441" />
            <Bond from="0" to="1" />
            <Bond from="0" to="2" />
        </Residue>
        <Residue name="Cl">
            <Atom name="Cl" type="MBPol-Cl" />
        </Residue>
    </Residues>
 <Script>
numAtomClasses = 4

# Conversion from atom types to atom classes.

typeToClass = {
  'MBPol-O':0,
  'MBPol-H':1,
  'MBPol-M':2,
  'MBPol-Cl':3
}

C6table = [
        9.92951990e-4, # kJ/(nm**6 mol) O-O
        3.49345451e-4, # kJ/(nm**6 mol) O-H
        0, # O-M
        0.00456078851, # J/(nm**6 mol) O-CL
        3.49345451e-4, # kJ/(nm**6 mol) O-H
        8.40715638e-5, # kJ/(nm**6 mol) H-H
        0, # H-M
        0.00085979832, # J/(nm**6 mol) H-CL
        0, 0, 0, 0, # M
        0.00456078851, # J/(nm**6 mol) O-CL
        0.00085979832, # J/(nm**6 mol) H-CL
        0, # CL-M
        0, # CL-CL
]

# vqz-f12-CP-fit-3.5-5.5-new-polar-5th-iteration+scans
d6table = [
        9.29548582e+01, # (nm**-1) O-O
        9.77520243e+01, # (nm**-1) O-H
        0, # O-M
        2.606978398421525e+02, # (nm**-1) O-CL
        9.77520243e+01, # (nm**-1) O-H
        9.40647517e+01, # (nm**-1) H-H
        0, # H-M
        1.631899730583967e+02, # (nm**-1) H-CL
        0, 0, 0, 0, # M
        2.606978398421525e+02, # (nm**-1) O-CL
        1.631899730583967e+02, # (nm**-1) H-CL
        0, # CL-M
        0, # CL-CL
]

tt6sum = '1 + (1 + (1 + (1 + (1 + (1 + (1) * d6 * r / 6) * d6 * r / 5) * d6 * r / 4) * d6 * r / 3) * d6 * r / 2) * d6 * r / 1'

customNonbondedForce = mm.CustomNonbondedForce('-C6*tt6/r^6; tt6=1.0 - tt6sum*exp(-d6*r);tt6sum={}; C6=C6table(type1, type2); d6=d6table(type1, type2)'.format(tt6sum))

customNonbondedForce.setNonbondedMethod(0)
customNonbondedForce.setCutoffDistance(nonbondedCutoff)
customNonbondedForce.addTabulatedFunction('C6table', mm.Discrete2DFunction(numAtomClasses, numAtomClasses, C6table))
customNonbondedForce.addTabulatedFunction('d6table', mm.Discrete2DFunction(numAtomClasses, numAtomClasses, d6table))
customNonbondedForce.addPerParticleParameter('type')
for atom in data.atoms:
     customNonbondedForce.addParticle([typeToClass[data.atomType[atom]]])
     
from itertools import combinations
for atom1, atom2 in itertools.combinations(data.atoms, 2):
    if (atom1.residue == atom2.residue or atom1.name  == 'M' or atom2.name  == 'M'):
        customNonbondedForce.addExclusion(atom1.index, atom2.index)
        #print("excluding bond between atom {} and atom {}".format(atom1.index, atom2.index))
    
sys.addForce(customNonbondedForce)

 </Script>
</ForceField>
